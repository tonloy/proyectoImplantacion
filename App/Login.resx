<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4QkdFRIll7JKuwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAArySURBVHhe
        7Z3fyy5VFcdPaiZlgphQIOYfcLoLlNQL6yIM6Sa86g8QOgSKdyIkGge76Ea0/AfUiyAQEfIEeSqM0BtB
        CBLpQtELfx0ovEix+n4ee47P2e+aZ/aa2Xtmz8z6wgde3mdm9t5rPc/Mnr3XXvvUSnWN+Lb4sXhYPCWe
        F38Wr4p/iPfEv/8Pf/M/PuMYjuUczuUaXItrhhrUV8T3xS/Ei+Id8d9KcG3KoCzKpOzQxLpSfFf8XLwk
        PhaWs6aAsqnDI4I6UbdQJd0inhAfCMsZLUDdqCN1DRXQN8WD4u/CMnjLUGfqThtCTtHp+q34j7CMuyRo
        A22hTaEe3S5+JyxDrgHaRhtDib4n/iQso60R2kqbN68bxG+EZaQtQNuxweZ0hbhf/EtYhtkS2ABbYJNN
        6DbxmrCMUQo6Xm+K34vHxU/FD8R3xLfETeI6wXs78Df/4zOO4VjO4VyuwbVqd0ixCbZZrS4XZ0UNQ34i
        /iIYkLlDfFmUFtfk2pRBWZRp1WUM2AYbYatVieccY+xWo4fyoXhS8Gv9qphalEnZ1IG6WHUcCrZaTd8A
        I70vrIZ6Yej1WfEj8SXRiqgLdaJupYamsRm2W6y+IB4VJW7574oHBM/q1kUdqSt1ttriAdthQ2y5KNGx
        ekZYjfLwtrhP1Him1xZ1pu60wWqbB2y5mImmq8U5YTUkF349PxEt3eaHijbQlrF3BGyKbZvW9eIVYTUg
        h0/Fr8W1Ym2iTbSNNlptzwHbYuMmdaMYM2tH47YwYUIbx/xIsDG2bkp8K4c6n44OnabLxFZEW2nz0A4y
        tm7mTsBzaeg3mmHQH4qtirYPHQ7H5rP3CeiZDu3wEYR5Wmxd2ABbWDbqA9vP9nbAu+nQV73z4msi9Jmw
        BTaxbNUHPphlnIABCqtCfTB0+kURulTYBNtYNusDX0wqhii9HRgmT86I0HFhI+9EE76YbNiYSQrv2P4F
        EREw+cJW2MyyZRf4pPoEEtOU3lk9vs3hfL+wmfdOgG+qTiUzV20VfIy47Q8XtrNsegx8VEVEq3if+3Rq
        QuPk7Rjio+KRRcSrecO4eK2J3v54YUPvKyK+KhpjSNCiVVAXDGzEe345YUvvYBE+KyJ6lp7hSo6NEb7y
        wqZePxR5K/DE7fP82fLYfm1hW08/DN+NEq8i1oW7YIYrVFfY2LJ9F6NewT3LtZid2tKU7lzCxp7ZV3w4
        SCxitC5oQZRLrH6dTtjaE1k0aEGqZ5UuoU6haYXNLV9Y4EuX+IZZF7Ig2HGNMXytC5t7Ak1dd2gSGlgX
        sSDiNTSPsL3lEwt8miVSmuS+ahDzvobQ7aUK2+euO8CnWelqyGtjXcCChQ+heYUPLN9Y4Nte5Ub38vxZ
        4oqdtQkf5PYF8O1Rkd7MOtEiBn3akWdw6GgKO3LcWSelsAJ2CQs1tyJ8kbsq+VfCFOHFuUkYWQYdakv4
        xPJVCj42Q8lJdWqdYMFa+FBbwieWryzw9QmRe9c6OIVsGPHq157wSW6mEnx9QiQ9tg5OiTCvdpUbPoav
        LxFpz3M7EXOlLeEbfqegkX8UrwuCHngF+oN4TNwjbhVbTeOObyyfpeDrS2xE7nvrwBTClKdOyPQNwcTH
        P4VVJws6OveKxWTVKCR8kxtKjs8vig0QrINSSI82la4SPKs+ElZdcnhD3C22JHxk2SIFn18Uu2BYB6WQ
        I28KfV38VVh1GAJG2UqQKj6ybJCCzy8qd5sVEiXWFtk63xJW+WN4WTSfY6eA8JHV/hR8vhObIVkHpDCb
        VHvsn19+DefveUGsfa0CPsqdzd1thJUb/EG+3Jrimd9326eD85x4SNwl6CACf/9M8FlfJ+hpsbi8e07h
        K6vtKbsgEbZFsz5MIWlyTfUNRP1N5ES1cAzHWtfYQyLoNQtfWe1Owfe7vfGsD1PInF1L/Iq7evvczn4p
        uEPkimM5p+tWyCqb1SVkPhC+stqdgu93GyRaH6bU/NUcC3DEkUPFudY1Yc3zGfjKanMKvt/tkml9mFJr
        BJARvq5BHm7lnl9+Ks7tehycGA5dkXJHBPF9dsIHNlKoIYZ3rfLozLkiWTvENbo6hjeLNQpfWe1Nwfe7
        /XKtD1N4P6+hrgkMevSlxLWsMlqghvCVVVYKvs9edsyWKjXExI5VHq96pcQrolVGC9QQvrLKSsH3u52z
        rQ9TaoWAMatnlce7fSlxLauMFqghfGWVlYLvd9unWx+m1JpZ61rzzqthKXEtq4wWqCF8ZZWVgu/jCzAz
        NeT6AsQjYF5qyPUIiE7gvNSQqxMYr4HzUkOu18AYCCorq5xDppBrICiGgsvKKuuQKeQaCo7JoLKyyjpk
        Crkmg2I6uKys8g6ZQq7p4AgIKSurvEOmkCsgBINZH6ZESFierDIPmUKukLAICi0rq9xDassdFIoiLLyc
        rLIPqS13WDiKhSHr0aCFIbE0bD0atDQsFoeuQ4MXh8by8HUodwTwxPJwFAkilq+uibUUcxi8byBmT6SI
        aVP4ZFSKmEgStWyNThJFhynSxC1Xo9PEoUgUuUzhi9xOfGeiSBSpYpepYqliUSSLXpbwQbFk0SjSxS9L
        xdPFx4YRyxG2L75hBIotY5ahKlvGoNwgEeD5E5tGTa+qm0ah2DaubR0LpE1xbxuHYuPIdoWtq28ciWLr
        2PY02daxKDaPbk+eQR8YtXk0iu3j29Hk28ejG0TXGn4Ljj0tQmWFTb1+wHdFdL+wCumClTdbCcKcQtgy
        dxn/HnxWTFeI14RVUBfnxdoTM08hbIgtLRt3ga/wWVHdJjzPH4jwsfHKDfPag4/wVRWdFVahxzgjQsOE
        7SybHgMfVRMranMTSuwhTHn0q8gGhc1yQ7z34JvqSbDpWb4vrAp0cUHElyBf2AqbWbbsAp8U6/X3ifhz
        b3+Ab3M8DvqFjby/fHwx+XqNR4VVmT7o1MTbwUlhE2+Hbw++mFyssX9GWBXqg9eaGCf4XNjC+6q3Bx/M
        tgUO4cXnhFWxPhjYiBHDz2zgHeTZg+1nX//ImnvP7NQhDFduee6AtnuGdw/B5s1sg3e9yI0mTqEDwwzX
        lqaSaStt9nak92BrbN6UbhRDvwTAN3oLQSW0cegdE7Axtm5SfCvHNI4oF0Kd1hhjSJtomyeSJwXbNvfL
        T8VzaWjHcA/BjkS8riHknDbQFk8ApwU2XczWt/RMh74iHkLMOwsflrgCiTpT99y4/WNgy9l7+17xbsoA
        xdCOziH8eug0LWFBKnWkrmN/8YDtsOGit7pliNI7d9AFK2BZBs1a+JYeD9SFOlG33FW6fWCzudLxFBeT
        FN5ZxD7IhsHQKUaaOnEVokzKpg65mTlywVaTTexMJaYpmasu8UhIYfKE9GjkyCNRYo0+A9fk2pRBWd4J
        mxywDTZa877Gu2gVb3iZFwxJvlySJpM5m+TQ/FrZSIFMpGypwrOajhXwN//jM47hWM7hXK7BtWp8cQ/B
        JtUieVoT8WoELQ4dBl0T2ABbFI/hW4J4znnWHawN2r66Z/0QEQHjWYa2dGhrREgZYhGjZ1Xy0qBtgxdq
        bklMmJDQoHbHawpoA22J1dMDREoT8tqMmWWcC+pM3bPTsoSOi/Rm5DHMTWY5B9SNOvamYgsNF+/tpDol
        3y1Jj0sNvQ6BsqkDg0PUaXETNmsQac/Jfc8GCOyCkbv9zRC4NmVQFmVuNS1982IzJDpdbIvG3nhskPi8
        YIyd/XIJwmTnbLZPB/7mf3zGMRzLOZzLNbjWxQ2W1qNTp/4HJXuYMJtCFfAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aAAAAABJRU5ErkJggg==
</value>
  </data>
</root>